* Page 1
  [[./png/png_000001.png]]
* Page 2
  [[./png/png_000002.png]]
** Notes
   - input-space grammars: mutate the input, (change input) 
   - program-based grammars: most common testing, mutate the program rather than
     input
* Page 3
  [[./png/png_000003.png]]
** Notes
   - you are mutating some grammar, if the grammar is defining the input, some
     program allows a wide width of input, some program allows very narrow range
     of inputs. As compiler, the input is a valid program which is an example of
     narrow range input
** valid string
   - deposit 123 $100.25
   - debit 100 $20.70
** invalid string
   - deposit $12 $12
* Page 4
  [[./png/png_000004.png]]
** TODO pros using grammar instead of regular expression
   - using grammar is more expressive
   - some strings cannot express by regular expression
     - e.x. strings with parenthesis?? (不确定)
** 
* Page 5
  [[./png/png_000005.png]]
* Page 6
  [[./png/png_000006.png]]
* Page 7
  [[./png/png_000007.png]]
 
